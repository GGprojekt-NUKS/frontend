{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Select Topic:\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedTopic = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topics, topic => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: topic.id,\n      value: topic.id\n    }, _toDisplayString(topic.topic), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedTopic]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getTextsByTopic && $options.getTextsByTopic(...args))\n  }, \"Get Texts\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.texts, text => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: text.id\n    }, _toDisplayString(text.text), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","$data","selectedTopic","$event","_Fragment","_renderList","topics","topic","key","id","value","_hoisted_2","onClick","_cache","args","$options","getTextsByTopic","texts","text"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Select Topic:</h2>\n    <select v-model=\"selectedTopic\">\n      <option v-for=\"topic in topics\" :key=\"topic.id\" :value=\"topic.id\">\n        {{ topic.topic }}\n      </option>\n    </select>\n    <button @click=\"getTextsByTopic\">Get Texts</button>\n    <ul>\n      <li v-for=\"text in texts\" :key=\"text.id\">{{ text.text }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      topics: [],\n      selectedTopic: null,\n      texts: [],\n    };\n  },\n  mounted() {\n    this.getTopics();\n  },\n  methods: {\n    getTopics() {\n      fetch(\"http://localhost:8000/topic_list\")\n        .then((response) => response.json())\n        .then((data) => {\n          this.topics = data;\n        })\n        .catch((error) => {\n          console.error(\"Error fetching topics:\", error);\n        });\n    },\n    getTextsByTopic() {\n      if (!this.selectedTopic) {\n        console.error(\"No topic selected.\");\n        return;\n      }\n      fetch(`http://localhost:8000/texts_by_topic/${this.selectedTopic}`)\n        .then((response) => response.json())\n        .then((data) => {\n          this.texts = data;\n        })\n        .catch((error) => {\n          console.error(\"Error fetching texts by topic:\", error);\n        });\n    },\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAsB,YAAlB,eAAa;;;uBADnBC,mBAAA,CAWM,cAVJC,UAAsB,E,gBACtBF,mBAAA,CAIS;+DAJQG,KAAA,CAAAC,aAAa,GAAAC,MAAA;yBAC5BJ,mBAAA,CAESK,SAAA,QAAAC,WAAA,CAFeJ,KAAA,CAAAK,MAAM,EAAfC,KAAK;yBAApBR,mBAAA,CAES;MAFwBS,GAAG,EAAED,KAAK,CAACE,EAAE;MAAGC,KAAK,EAAEH,KAAK,CAACE;wBACzDF,KAAK,CAACA,KAAK,wBAAAI,UAAA;2EAFDV,KAAA,CAAAC,aAAa,E,GAK9BJ,mBAAA,CAAmD;IAA1Cc,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,WAAS,GAC1ChB,mBAAA,CAEK,c,kBADHC,mBAAA,CAA6DK,SAAA,QAAAC,WAAA,CAA1CJ,KAAA,CAAAgB,KAAK,EAAbC,IAAI;yBAAfnB,mBAAA,CAA6D;MAAlCS,GAAG,EAAEU,IAAI,CAACT;wBAAOS,IAAI,CAACA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}