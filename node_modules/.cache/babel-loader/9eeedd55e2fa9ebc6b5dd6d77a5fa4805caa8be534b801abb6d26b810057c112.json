{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedTopicId: '',\n      newText: '',\n      items: []\n    };\n  },\n  async mounted() {\n    // Load topics from server and add index as ID\n    const response = await fetch('http://localhost:8000/topic_list');\n    const topics = await response.json();\n    this.items = topics.map((topic, index) => {\n      return {\n        id: index,\n        topic: topic\n      };\n    });\n  },\n  methods: {\n    addText() {\n      axios.post('http://localhost:8000/add', {\n        text: this.newText,\n        topic_id: this.selectedTopicId\n      }).then(response => {\n        console.log(response.data);\n        this.newText = '';\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  computed: {\n    mergedItems() {\n      // Merge topics and texts based on the topic ID\n      return this.items.map(item => {\n        return {\n          topic: item.topic,\n          texts: this.texts.filter(text => text.topic_id === item.id)\n        };\n      });\n    }\n  },\n  async created() {\n    // Load texts from server\n    const response = await fetch('http://localhost:8000/texts');\n    this.texts = await response.json();\n  }\n};","map":{"version":3,"names":["axios","data","selectedTopicId","newText","items","mounted","response","fetch","topics","json","map","topic","index","id","methods","addText","post","text","topic_id","then","console","log","catch","error","computed","mergedItems","item","texts","filter","created"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FORUM</h1>\n    <div>\n      <h2>Pick a topic:</h2>\n      <select id=\"textDropdown\" v-model=\"selectedTopicId\">\n        <option v-for=\"item in items\" :value=\"item.id\" :key=\"item.id\">{{ item.topic }}</option>\n      </select>\n      <br>\n    </div>\n    <div>\n      <h2>Add new text:</h2>\n      <input type=\"text\" id=\"newText\" v-model=\"newText\">\n      <button @click=\"addText\">Add</button>\n    </div>\n    <ul>\n      <li v-for=\"item in mergedItems\" :key=\"item.topic\">\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      selectedTopicId: '',\n      newText: '',\n      items: []\n    }\n  },\n  async mounted() {\n    // Load topics from server and add index as ID\n    const response = await fetch('http://localhost:8000/topic_list');\n    const topics = await response.json();\n    this.items = topics.map((topic, index) => {\n      return { id: index, topic: topic };\n    });\n  },\n  methods: {\n    addText() {\n      axios.post('http://localhost:8000/add', {\n        text: this.newText,\n        topic_id: this.selectedTopicId\n      })\n        .then(response => {\n          console.log(response.data)\n          this.newText = ''\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  },\n  computed: {\n    mergedItems() {\n      // Merge topics and texts based on the topic ID\n      return this.items.map(item => {\n        return {\n          topic: item.topic,\n          texts: this.texts.filter(text => text.topic_id === item.id)\n        };\n      });\n    }\n  },\n  async created() {\n    // Load texts from server\n    const response = await fetch('http://localhost:8000/texts');\n    this.texts = await response.json();\n  }\n}\n</script>\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAChE,MAAMC,MAAK,GAAI,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpC,IAAI,CAACL,KAAI,GAAII,MAAM,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACxC,OAAO;QAAEC,EAAE,EAAED,KAAK;QAAED,KAAK,EAAEA;MAAM,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;EACDG,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACRf,KAAK,CAACgB,IAAI,CAAC,2BAA2B,EAAE;QACtCC,IAAI,EAAE,IAAI,CAACd,OAAO;QAClBe,QAAQ,EAAE,IAAI,CAAChB;MACjB,CAAC,EACEiB,IAAI,CAACb,QAAO,IAAK;QAChBc,OAAO,CAACC,GAAG,CAACf,QAAQ,CAACL,IAAI;QACzB,IAAI,CAACE,OAAM,GAAI,EAAC;MAClB,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,KAAK;MACnB,CAAC;IACL;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ;MACA,OAAO,IAAI,CAACrB,KAAK,CAACM,GAAG,CAACgB,IAAG,IAAK;QAC5B,OAAO;UACLf,KAAK,EAAEe,IAAI,CAACf,KAAK;UACjBgB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACC,MAAM,CAACX,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAMQ,IAAI,CAACb,EAAE;QAC5D,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC;EACD,MAAMgB,OAAOA,CAAA,EAAG;IACd;IACA,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,IAAI,CAACoB,KAAI,GAAI,MAAMrB,QAAQ,CAACG,IAAI,EAAE;EACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}