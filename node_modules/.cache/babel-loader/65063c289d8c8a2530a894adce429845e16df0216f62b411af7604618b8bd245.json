{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"RESTAURANT RATINGS\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add a new restaurant:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"newRestaurantName\"\n}, \"Name: \", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add a rating:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"restaurantDropdown\"\n}, \"Restaurant: \", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select a restaurant\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"newRating\"\n}, \"Rating: \", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Restaurants:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"newRestaurantName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newRestaurantName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newRestaurantName]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addRestaurant && $options.addRestaurant(...args))\n  }, \"Add\")]), _createElementVNode(\"div\", null, [_hoisted_4, _hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    id: \"restaurantDropdown\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.selectedRestaurantId = $event)\n  }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: item.id,\n      key: item.id\n    }, _toDisplayString(item.restaurant_name), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.selectedRestaurantId]]), _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"newRating\",\n    min: \"1\",\n    max: \"5\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newRating = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newRating]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.addRating && $options.addRating(...args))\n  }, \"Add\")]), _hoisted_10, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.mergedItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.restaurant_name\n    }, _toDisplayString(item.restaurant_name) + \": \" + _toDisplayString(item.avg_rating ? item.avg_rating.toFixed(1) : 'No ratings yet'), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","for","disabled","value","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","id","$data","newRestaurantName","$event","onClick","_cache","args","$options","addRestaurant","_hoisted_4","_hoisted_5","_ctx","selectedRestaurantId","_hoisted_6","_Fragment","_renderList","items","item","key","restaurant_name","_hoisted_7","_hoisted_8","_hoisted_9","min","max","newRating","addRating","_hoisted_10","mergedItems","_toDisplayString","avg_rating","toFixed"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>RESTAURANT RATINGS</h1>\n    <div>\n      <h2>Add a new restaurant:</h2>\n      <label for=\"newRestaurantName\">Name: </label>\n      <input type=\"text\" id=\"newRestaurantName\" v-model=\"newRestaurantName\">\n      <button @click=\"addRestaurant\">Add</button>\n    </div>\n    <div>\n      <h2>Add a rating:</h2>\n      <label for=\"restaurantDropdown\">Restaurant: </label>\n      <select id=\"restaurantDropdown\" v-model=\"selectedRestaurantId\">\n        <option disabled value=\"\">Please select a restaurant</option>\n        <option v-for=\"item in items\" :value=\"item.id\" :key=\"item.id\">{{ item.restaurant_name }}</option>\n      </select>\n      <br>\n      <label for=\"newRating\">Rating: </label>\n      <input type=\"number\" id=\"newRating\" min=\"1\" max=\"5\" v-model=\"newRating\">\n      <button @click=\"addRating\">Add</button>\n    </div>\n    <h2>Restaurants:</h2>\n    <ul>\n      <li v-for=\"item in mergedItems\" :key=\"item.restaurant_name\">\n        {{ item.restaurant_name }}: {{ item.avg_rating ? item.avg_rating.toFixed(1) : 'No ratings yet' }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      items: [],\n      ratings: [],\n      newRestaurantName: '',\n      newRestaurantAddress: '',\n      newRatingRestaurantId: '',\n      newRating: '',\n      sortedRestaurants: []\n    }\n  },\n  computed: {\n    mergedItems() {\n      return this.sortedRestaurants\n    }\n  },\n  methods: {\n    addRestaurant() {\n      const url = 'http://212.101.137.114:8000/addRestaurant';\n      const data = {\n        restaurant_name: this.newRestaurantName,\n        address: this.newRestaurantAddress\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.items.push(data);\n          this.newRestaurantName = '';\n          this.newRestaurantAddress = '';\n          this.refreshData();\n        })\n        .catch(error => {\n          console.error('Error adding new restaurant:', error);\n        });\n    },\n    addRating() {\n      const url = 'http://212.101.137.114:8000/addRestaurantRating';\n      const data = {\n        restaurant_id: this.selectedRestaurantId,\n        rating: parseInt(this.newRating)\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.ratings.push(data);\n          this.selectedRestaurantId = '';\n          this.newRating = '';\n          this.refreshData();\n        })\n        .catch(error => {\n          console.error('Error adding new rating:', error);\n        });\n    },\n    refreshData() {\n      const restaurantNameListUrl = 'http://212.101.137.114:8000/getRestaurantNameList';\n      const restaurantRatingsUrl = 'http://212.101.137.114:8000/getRestaurantRatingList';\n      const sortedRestaurantsUrl = 'http://212.101.137.114/getSortedRestaurantList';\n\n      // Fetch data from both APIs simultaneously using Promise.all()\n      Promise.all([\n        fetch(restaurantNameListUrl).then(response => response.json()),\n        fetch(restaurantRatingsUrl).then(response => response.json()),\n        fetch(sortedRestaurantsUrl).then(response => response.json())\n      ]).then(data => {\n        this.items = data[0];\n        this.ratings = data[1];\n        this.sortedRestaurants = data[2];\n      });\n    }\n  },\n  mounted() {\n    this.refreshData();\n  }\n};\n</script>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  margin-left: 5%;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>"],"mappings":";gCAEIA,mBAAA,CAA2B,YAAvB,oBAAkB;gCAEpBA,mBAAA,CAA8B,YAA1B,uBAAqB;gCACzBA,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAmB,GAAC,QAAM;gCAKrCD,mBAAA,CAAsB,YAAlB,eAAa;gCACjBA,mBAAA,CAAoD;EAA7CC,GAAG,EAAC;AAAoB,GAAC,cAAY;gCAE1CD,mBAAA,CAA6D;EAArDE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,4BAA0B;;gCAGtDH,mBAAA,CAAI;gCACJA,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAW,GAAC,UAAQ;iCAIjCD,mBAAA,CAAqB,YAAjB,cAAY;;;uBApBlBI,mBAAA,CA0BM,cAzBJC,UAA2B,EAC3BL,mBAAA,CAKM,cAJJM,UAA8B,EAC9BC,UAA6C,E,gBAC7CP,mBAAA,CAAsE;IAA/DQ,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,mBAAmB;+DAAUC,KAAA,CAAAC,iBAAiB,GAAAC,MAAA;iDAAjBF,KAAA,CAAAC,iBAAiB,E,GACpEX,mBAAA,CAA2C;IAAlCa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,KAAG,E,GAEpCf,mBAAA,CAWM,cAVJkB,UAAsB,EACtBC,UAAoD,E,gBACpDnB,mBAAA,CAGS;IAHDS,EAAE,EAAC,oBAAoB;+DAAUW,IAAA,CAAAC,oBAAoB,GAAAT,MAAA;MAC3DU,UAA6D,G,kBAC7DlB,mBAAA,CAAiGmB,SAAA,QAAAC,WAAA,CAA1Ed,KAAA,CAAAe,KAAK,EAAbC,IAAI;yBAAnBtB,mBAAA,CAAiG;MAAlED,KAAK,EAAEuB,IAAI,CAACjB,EAAE;MAAGkB,GAAG,EAAED,IAAI,CAACjB;wBAAOiB,IAAI,CAACE,eAAe,wBAAAC,UAAA;2EAF9CT,IAAA,CAAAC,oBAAoB,E,GAI7DS,UAAI,EACJC,UAAuC,E,gBACvC/B,mBAAA,CAAwE;IAAjEQ,IAAI,EAAC,QAAQ;IAACC,EAAE,EAAC,WAAW;IAACuB,GAAG,EAAC,GAAG;IAACC,GAAG,EAAC,GAAG;+DAAUvB,KAAA,CAAAwB,SAAS,GAAAtB,MAAA;iDAATF,KAAA,CAAAwB,SAAS,E,GACtElC,mBAAA,CAAuC;IAA9Ba,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAmB,SAAA,IAAAnB,QAAA,CAAAmB,SAAA,IAAApB,IAAA,CAAS;KAAE,KAAG,E,GAEhCqB,WAAqB,EACrBpC,mBAAA,CAIK,c,kBAHHI,mBAAA,CAEKmB,SAAA,QAAAC,WAAA,CAFcR,QAAA,CAAAqB,WAAW,EAAnBX,IAAI;yBAAftB,mBAAA,CAEK;MAF4BuB,GAAG,EAAED,IAAI,CAACE;wBACtCF,IAAI,CAACE,eAAe,IAAG,IAAE,GAAAU,gBAAA,CAAGZ,IAAI,CAACa,UAAU,GAAGb,IAAI,CAACa,UAAU,CAACC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}