{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      items: [],\n      ratings: [],\n      newRestaurantName: '',\n      newRestaurantAddress: '',\n      newRatingRestaurantId: '',\n      newRating: '',\n      sortedRestaurants: []\n    };\n  },\n  computed: {\n    mergedItems() {\n      return this.sortedRestaurants;\n    }\n  },\n  methods: {\n    addRestaurant() {\n      const url = 'http://212.101.137.114:8000/addRestaurant';\n      const data = {\n        restaurant_name: this.newRestaurantName,\n        address: this.newRestaurantAddress\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        this.items.push(data);\n        this.newRestaurantName = '';\n        this.newRestaurantAddress = '';\n        this.refreshData();\n      }).catch(error => {\n        console.error('Error adding new restaurant:', error);\n      });\n    },\n    addRating() {\n      const url = 'http://212.101.137.114:8000/addRestaurantRating';\n      const data = {\n        restaurant_id: this.selectedRestaurantId,\n        rating: parseInt(this.newRating)\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        this.ratings.push(data);\n        this.selectedRestaurantId = '';\n        this.newRating = '';\n        this.refreshData();\n      }).catch(error => {\n        console.error('Error adding new rating:', error);\n      });\n    },\n    refreshData() {\n      const restaurantNameListUrl = 'http://212.101.137.114:8000/getRestaurantNameList';\n      const restaurantRatingsUrl = 'http://212.101.137.114:8000/getRestaurantRatingList';\n      const sortedRestaurantsUrl = 'http://212.101.137.114/getSortedRestaurantList';\n\n      // Fetch data from both APIs simultaneously using Promise.all()\n      Promise.all([fetch(restaurantNameListUrl).then(response => response.json()), fetch(restaurantRatingsUrl).then(response => response.json()), fetch(sortedRestaurantsUrl).then(response => response.json())]).then(data => {\n        this.items = data[0];\n        this.ratings = data[1];\n        this.sortedRestaurants = data[2];\n      });\n    }\n  },\n  mounted() {\n    this.refreshData();\n  }\n};","map":{"version":3,"names":["data","items","ratings","newRestaurantName","newRestaurantAddress","newRatingRestaurantId","newRating","sortedRestaurants","computed","mergedItems","methods","addRestaurant","url","restaurant_name","address","fetch","method","headers","body","JSON","stringify","then","response","json","push","refreshData","catch","error","console","addRating","restaurant_id","selectedRestaurantId","rating","parseInt","restaurantNameListUrl","restaurantRatingsUrl","sortedRestaurantsUrl","Promise","all","mounted"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>RESTAURANT RATINGS</h1>\n    <div>\n      <h2>Add a new restaurant:</h2>\n      <label for=\"newRestaurantName\">Name: </label>\n      <input type=\"text\" id=\"newRestaurantName\" v-model=\"newRestaurantName\">\n      <button @click=\"addRestaurant\">Add</button>\n    </div>\n    <div>\n      <h2>Add a rating:</h2>\n      <label for=\"restaurantDropdown\">Restaurant: </label>\n      <select id=\"restaurantDropdown\" v-model=\"selectedRestaurantId\">\n        <option disabled value=\"\">Please select a restaurant</option>\n        <option v-for=\"item in items\" :value=\"item.id\" :key=\"item.id\">{{ item.restaurant_name }}</option>\n      </select>\n      <br>\n      <label for=\"newRating\">Rating: </label>\n      <input type=\"number\" id=\"newRating\" min=\"1\" max=\"5\" v-model=\"newRating\">\n      <button @click=\"addRating\">Add</button>\n    </div>\n    <h2>Restaurants:</h2>\n    <ul>\n      <li v-for=\"item in mergedItems\" :key=\"item.restaurant_name\">\n        {{ item.restaurant_name }}: {{ item.avg_rating ? item.avg_rating.toFixed(1) : 'No ratings yet' }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      items: [],\n      ratings: [],\n      newRestaurantName: '',\n      newRestaurantAddress: '',\n      newRatingRestaurantId: '',\n      newRating: '',\n      sortedRestaurants: []\n    }\n  },\n  computed: {\n    mergedItems() {\n      return this.sortedRestaurants\n    }\n  },\n  methods: {\n    addRestaurant() {\n      const url = 'http://212.101.137.114:8000/addRestaurant';\n      const data = {\n        restaurant_name: this.newRestaurantName,\n        address: this.newRestaurantAddress\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.items.push(data);\n          this.newRestaurantName = '';\n          this.newRestaurantAddress = '';\n          this.refreshData();\n        })\n        .catch(error => {\n          console.error('Error adding new restaurant:', error);\n        });\n    },\n    addRating() {\n      const url = 'http://212.101.137.114:8000/addRestaurantRating';\n      const data = {\n        restaurant_id: this.selectedRestaurantId,\n        rating: parseInt(this.newRating)\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.ratings.push(data);\n          this.selectedRestaurantId = '';\n          this.newRating = '';\n          this.refreshData();\n        })\n        .catch(error => {\n          console.error('Error adding new rating:', error);\n        });\n    },\n    refreshData() {\n      const restaurantNameListUrl = 'http://212.101.137.114:8000/getRestaurantNameList';\n      const restaurantRatingsUrl = 'http://212.101.137.114:8000/getRestaurantRatingList';\n      const sortedRestaurantsUrl = 'http://212.101.137.114/getSortedRestaurantList';\n\n      // Fetch data from both APIs simultaneously using Promise.all()\n      Promise.all([\n        fetch(restaurantNameListUrl).then(response => response.json()),\n        fetch(restaurantRatingsUrl).then(response => response.json()),\n        fetch(sortedRestaurantsUrl).then(response => response.json())\n      ]).then(data => {\n        this.items = data[0];\n        this.ratings = data[1];\n        this.sortedRestaurants = data[2];\n      });\n    }\n  },\n  mounted() {\n    this.refreshData();\n  }\n};\n</script>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  margin-left: 5%;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}