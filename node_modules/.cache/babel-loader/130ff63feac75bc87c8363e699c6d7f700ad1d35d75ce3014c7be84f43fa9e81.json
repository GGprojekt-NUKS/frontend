{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"topics-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"popup\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newText = $event),\n    placeholder: \"Enter new text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newText]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addText && $options.addText(...args))\n  }, \"Add\"), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topicList, (topic, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: \"topic-button\",\n      onClick: $event => $options.openPopup(topic)\n    }, _toDisplayString(topic), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.textList, (text, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString(text), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.popupVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedTopic), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Here's some information about \" + _toDisplayString($data.selectedTopic) + \"...\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closePopup && $options.closePopup(...args))\n  }, \"Close\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","$data","newText","$event","placeholder","onClick","_cache","args","$options","addText","_hoisted_1","_Fragment","_renderList","topicList","topic","index","key","openPopup","_hoisted_2","textList","text","popupVisible","_hoisted_3","_toDisplayString","selectedTopic","closePopup"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <input v-model=\"newText\" placeholder=\"Enter new text\" />\n    <button @click=\"addText\">Add</button>\n    <div>\n      <div class=\"topics-container\">\n        <button v-for=\"(topic, index) in topicList\" :key=\"index\" class=\"topic-button\" @click=\"openPopup(topic)\">\n          {{ topic }}\n        </button>\n      </div>\n    </div>\n    <div>\n      <p v-for=\"(text, index) in textList\" :key=\"index\" class=\"text-item\">\n        {{ text }}\n      </p>\n    </div>\n\n    <div v-if=\"popupVisible\" class=\"popup\">\n      <h2>{{ selectedTopic }}</h2>\n      <p>Here's some information about {{ selectedTopic }}...</p>\n      <button @click=\"closePopup\">Close</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newText: \"\",\n      textList: [],\n      topicList: [],\n      popupVisible: false,\n      selectedTopic: \"\",\n    };\n  },\n  created() {\n    // Make an API call to get all previous texts and update the textList property\n    fetch(\"http://localhost:8000/text_list\")\n      .then(response => response.json())\n      .then(data => {\n        this.textList = data;\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n    // Make an API call to get all previous topics and update the topicList property\n    fetch(\"http://localhost:8000/topic_list\")\n      .then(response => response.json())\n      .then(data => {\n        this.topicList = data;\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n  methods: {\n    addText() {\n      if (this.newText) {\n        // Make an API call to add the new text\n        fetch(\"http://localhost:8000/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ text: this.newText })\n        })\n          .then(response => {\n            if (!response.ok) {\n              throw new Error(\"Failed to add text\");\n            }\n            // Update the textList property with the new text\n            this.textList.push(this.newText);\n            this.newText = \"\";\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      }\n    },\n\n    openPopup(topic) {\n      this.popupVisible = true;\n      this.selectedTopic = topic;\n    },\n\n    closePopup() {\n      this.popupVisible = false;\n      this.selectedTopic = \"\";\n    },\n  }\n};\n</script>\n\n<style>\n.text-item {\n  border: 1px solid black;\n  padding: 10px;\n}\n\n.topics-container {\n  margin-bottom: 10px;\n}\n\n.topic-button {\n  margin-right: 10px;\n}\n\n.popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  border: 1px solid black;\n  padding: 20px;\n  z-index: 999;\n}\n</style>\n"],"mappings":";;EAKWA,KAAK,EAAC;AAAkB;;;;EAYNA,KAAK,EAAC;;;uBAhBjCC,mBAAA,CAqBM,c,gBApBJC,mBAAA,CAAwD;+DAAxCC,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBH,KAAA,CAAAC,OAAO,E,GACvBF,mBAAA,CAAqC;IAA5BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,KAAG,GAC5BP,mBAAA,CAMM,cALJA,mBAAA,CAIM,OAJNU,UAIM,I,kBAHJX,mBAAA,CAESY,SAAA,QAAAC,WAAA,CAFwBX,KAAA,CAAAY,SAAS,GAA1BC,KAAK,EAAEC,KAAK;yBAA5BhB,mBAAA,CAES;MAFoCiB,GAAG,EAAED,KAAK;MAAEjB,KAAK,EAAC,cAAc;MAAEO,OAAK,EAAAF,MAAA,IAAEK,QAAA,CAAAS,SAAS,CAACH,KAAK;wBAChGA,KAAK,wBAAAI,UAAA;sCAIdlB,mBAAA,CAIM,e,kBAHJD,mBAAA,CAEIY,SAAA,QAAAC,WAAA,CAFuBX,KAAA,CAAAkB,QAAQ,GAAxBC,IAAI,EAAEL,KAAK;yBAAtBhB,mBAAA,CAEI;MAFkCiB,GAAG,EAAED,KAAK;MAAEjB,KAAK,EAAC;wBACnDsB,IAAI;oCAIAnB,KAAA,CAAAoB,YAAY,I,cAAvBtB,mBAAA,CAIM,OAJNuB,UAIM,GAHJtB,mBAAA,CAA4B,YAAAuB,gBAAA,CAArBtB,KAAA,CAAAuB,aAAa,kBACpBxB,mBAAA,CAA2D,WAAxD,gCAA8B,GAAAuB,gBAAA,CAAGtB,KAAA,CAAAuB,aAAa,IAAG,KAAG,iBACvDxB,mBAAA,CAA0C;IAAjCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAiB,UAAA,IAAAjB,QAAA,CAAAiB,UAAA,IAAAlB,IAAA,CAAU;KAAE,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}