{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"topics\"\n}, \"Topic Filter: \", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    name: \"topics\",\n    id: \"topics\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedTopic = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.topics, (option, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: option.id\n    }, _toDisplayString(option.topic), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.selectedTopic]])]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newText = $event),\n    placeholder: \"Enter new text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newText]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addText && $options.addText(...args))\n  }, \"Add\"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.textList, (text, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString(text), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","_hoisted_1","name","id","_ctx","selectedTopic","$event","_Fragment","_renderList","topics","option","index","key","value","topic","_hoisted_2","$data","newText","placeholder","onClick","_cache","args","$options","addText","textList","text","class"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <label for=\"topics\">Topic Filter: </label>\n      <select name=\"topics\" id=\"topics\" v-model=\"selectedTopic\">\n        <option v-for=\"(option, index) in topics\" :key=\"index\" :value=\"option.id\">{{ option.topic }}</option>\n      </select>\n    </div>\n    <input v-model=\"newText\" placeholder=\"Enter new text\" />\n    <button @click=\"addText\">Add</button>\n    <div>\n      <p v-for=\"(text, index) in textList\" :key=\"index\" class=\"text-item\">\n        {{ text }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newText: \"\",\n      textList: []\n    };\n  },\n  created() {\n    // Make an API call to get all previous texts and update the textList property\n    fetch(\"http://localhost:8000/text_list\")\n      .then(response => response.json())\n      .then(data => {\n        this.textList = data;\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n  methods: {\n    addText() {\n      if (this.newText) {\n        // Make an API call to add the new text\n        fetch(\"http://localhost:8000/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ text: this.newText })\n        })\n          .then(response => {\n            if (!response.ok) {\n              throw new Error(\"Failed to add text\");\n            }\n            // Update the textList property with the new text\n            this.textList.push(this.newText);\n            this.newText = \"\";\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.text-item {\n  border: 1px solid black;\n  padding: 10px;\n}\n</style>\n"],"mappings":";gCAGMA,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAQ,GAAC,gBAAc;;;uBAFtCC,mBAAA,CAcM,cAbJF,mBAAA,CAKM,cAJJG,UAA0C,E,gBAC1CH,mBAAA,CAES;IAFDI,IAAI,EAAC,QAAQ;IAACC,EAAE,EAAC,QAAQ;+DAAUC,IAAA,CAAAC,aAAa,GAAAC,MAAA;yBACtDN,mBAAA,CAAqGO,SAAA,QAAAC,WAAA,CAAnEJ,IAAA,CAAAK,MAAM,GAAxBC,MAAM,EAAEC,KAAK;yBAA7BX,mBAAA,CAAqG;MAA1DY,GAAG,EAAED,KAAK;MAAGE,KAAK,EAAEH,MAAM,CAACP;wBAAOO,MAAM,CAACI,KAAK,wBAAAC,UAAA;2EADhDX,IAAA,CAAAC,aAAa,E,qBAI1DP,mBAAA,CAAwD;+DAAxCkB,KAAA,CAAAC,OAAO,GAAAX,MAAA;IAAEY,WAAW,EAAC;iDAArBF,KAAA,CAAAC,OAAO,E,GACvBnB,mBAAA,CAAqC;IAA5BqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,KAAG,GAC5BvB,mBAAA,CAIM,e,kBAHJE,mBAAA,CAEIO,SAAA,QAAAC,WAAA,CAFuBQ,KAAA,CAAAQ,QAAQ,GAAxBC,IAAI,EAAEd,KAAK;yBAAtBX,mBAAA,CAEI;MAFkCY,GAAG,EAAED,KAAK;MAAEe,KAAK,EAAC;wBACnDD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}