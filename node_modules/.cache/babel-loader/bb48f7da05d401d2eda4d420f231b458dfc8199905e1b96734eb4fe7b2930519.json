{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"FORUM\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Pick a topic:\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add new text:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    id: \"textDropdown\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedTopicId = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: item.id,\n      key: item.id\n    }, _toDisplayString(item.topic), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedTopicId]]), _hoisted_4]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"newText\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newText = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newText]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addText && $options.addText(...args))\n  }, \"Add\")]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.mergedItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.topic\n    });\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","id","$data","selectedTopicId","$event","_Fragment","_renderList","items","item","value","key","topic","_hoisted_3","_hoisted_4","_hoisted_5","type","newText","onClick","_cache","args","$options","addText","mergedItems"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FORUM</h1>\n    <div>\n      <h2>Pick a topic:</h2>\n      <select id=\"textDropdown\" v-model=\"selectedTopicId\">\n        <option v-for=\"item in items\" :value=\"item.id\" :key=\"item.id\">{{ item.topic }}</option>\n      </select>\n      <br>\n    </div>\n    <div>\n      <h2>Add new text:</h2>\n      <input type=\"text\" id=\"newText\" v-model=\"newText\">\n      <button @click=\"addText\">Add</button>\n    </div>\n    <ul>\n      <li v-for=\"item in mergedItems\" :key=\"item.topic\">\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      selectedTopicId: '',\n      newText: '',\n      items: [],\n      topics: []\n    }\n  },\n  mounted() {\n    axios.get('http://localhost:8000/topic_list')\n      .then(response => {\n        this.items = response.data\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  },\n  methods: {\n    addText() {\n      axios.post('http://localhost:8000/add', {\n        text: this.newText,\n        topic_id: this.selectedTopicId\n      })\n        .then(response => {\n          console.log(response.data)\n          this.newText = ''\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  },\n  computed: {\n    mergedItems() {\n      return this.topics.map(topic => {\n        const texts = this.items.filter(item => item.topic_id === topic.id)\n        return {\n          ...topic,\n          texts\n        }\n      })\n    }\n  },\n  watch: {\n    items() {\n      this.topics = Array.from(new Set(this.items.map(item => item.topic_id)))\n        .map(topic_id => {\n          const item = this.items.find(item => item.topic_id === topic_id)\n          return {\n            id: item.topic_id,\n            topic: item.topic\n          }\n        })\n    }\n  }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAc,YAAV,OAAK;gCAEPA,mBAAA,CAAsB,YAAlB,eAAa;;gCAIjBA,mBAAA,CAAI;gCAGJA,mBAAA,CAAsB,YAAlB,eAAa;;;uBAVrBC,mBAAA,CAkBM,cAjBJC,UAAc,EACdF,mBAAA,CAMM,cALJG,UAAsB,E,gBACtBH,mBAAA,CAES;IAFDI,EAAE,EAAC,cAAc;+DAAUC,KAAA,CAAAC,eAAe,GAAAC,MAAA;yBAChDN,mBAAA,CAAuFO,SAAA,QAAAC,WAAA,CAAhEJ,KAAA,CAAAK,KAAK,EAAbC,IAAI;yBAAnBV,mBAAA,CAAuF;MAAxDW,KAAK,EAAED,IAAI,CAACP,EAAE;MAAGS,GAAG,EAAEF,IAAI,CAACP;wBAAOO,IAAI,CAACG,KAAK,wBAAAC,UAAA;2EAD1CV,KAAA,CAAAC,eAAe,E,GAGlDU,UAAI,C,GAENhB,mBAAA,CAIM,cAHJiB,UAAsB,E,gBACtBjB,mBAAA,CAAkD;IAA3CkB,IAAI,EAAC,MAAM;IAACd,EAAE,EAAC,SAAS;+DAAUC,KAAA,CAAAc,OAAO,GAAAZ,MAAA;iDAAPF,KAAA,CAAAc,OAAO,E,GAChDnB,mBAAA,CAAqC;IAA5BoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,KAAG,E,GAE9BtB,mBAAA,CAGK,c,kBAFHC,mBAAA,CACKO,SAAA,QAAAC,WAAA,CADcc,QAAA,CAAAE,WAAW,EAAnBd,IAAI;yBAAfV,mBAAA,CACK;MAD4BY,GAAG,EAAEF,IAAI,CAACG"},"metadata":{},"sourceType":"module","externalDependencies":[]}