{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"FORUM\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Pick a topic:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select one\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add new text:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedTopicId = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.loadTexts && $options.loadTexts(...args))\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.topicList, (topic, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: topic.id\n    }, _toDisplayString(topic.topic), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $data.selectedTopicId]]), _hoisted_5]), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"newText\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newText = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newText]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.saveText && $options.saveText(...args))\n  }, \"Save\")]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.mergedItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.topic\n    });\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","_hoisted_1","_hoisted_2","$data","selectedTopicId","$event","onChange","_cache","args","$options","loadTexts","_hoisted_3","_Fragment","_renderList","_ctx","topicList","topic","index","key","id","_hoisted_4","_hoisted_5","_hoisted_6","type","newText","onClick","saveText","mergedItems","item"],"sources":["/home/nuksvaje/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FORUM</h1>\n    <div>\n      <h2>Pick a topic:</h2>\n      <select v-model=\"selectedTopicId\" @change=\"loadTexts\">\n        <option disabled value=\"\">Please select one</option>\n        <option v-for=\"(topic, index) in topicList\" :key=\"index\" :value=\"topic.id\">{{ topic.topic }}</option>\n      </select>\n      <br>\n    </div>\n    <div>\n      <h2>Add new text:</h2>\n      <input type=\"text\" id=\"newText\" v-model=\"newText\">\n      <button @click=\"saveText\">Save</button>\n    </div>\n    <ul>\n      <li v-for=\"item in mergedItems\" :key=\"item.topic\">\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      items: [],\n      selectedTopicId: null,\n      newText: '',\n    };\n  },\n  created() {\n    // Load topics and texts from server on component creation\n    this.loadTopics();\n    this.loadTexts();\n  },\n  mounted() {\n    this.loadTopics();\n    this.selectedTopicId = this.topicList[0].id;\n    this.loadTexts();\n  },\n  methods: {\n    async loadTopics() {\n      // Send GET request to /topic_list to load topics from server\n      const response = await fetch('http://localhost:8000/topic_list');\n      const data = await response.json();\n      this.items = data.map((topic, index) => {\n        return { id: index, topic: topic };\n      });\n    },\n    async loadTexts() {\n      // Send GET request to /texts_by_topic with selected topic ID to load texts from server\n      const response = await fetch(`http://localhost:8000/texts_by_topic/${this.selectedTopicId}`);\n      const data = await response.json();\n      this.textList = data;\n    },\n    async saveText() {\n      // Send POST request to /add to save new text to server\n      const response = await fetch('http://localhost:8000/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: this.newText, topic_id: this.selectedTopicId + 1 }),\n      });\n      if (response.ok) {\n        this.newText = '';\n        this.loadTexts();\n    } else {\n      console.error('Failed to save text:', response.statusText);\n    }\n  },\n\n  },\n};\n</script>\n\n"],"mappings":";gCAEIA,mBAAA,CAAc,YAAV,OAAK;gCAEPA,mBAAA,CAAsB,YAAlB,eAAa;gCAEfA,mBAAA,CAAoD;EAA5CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,mBAAiB;;gCAG7CF,mBAAA,CAAI;gCAGJA,mBAAA,CAAsB,YAAlB,eAAa;;;uBAXrBG,mBAAA,CAmBM,cAlBJC,UAAc,EACdJ,mBAAA,CAOM,cANJK,UAAsB,E,gBACtBL,mBAAA,CAGS;+DAHQM,KAAA,CAAAC,eAAe,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAClDG,UAAoD,G,kBACpDX,mBAAA,CAAqGY,SAAA,QAAAC,WAAA,CAApEC,IAAA,CAAAC,SAAS,GAA1BC,KAAK,EAAEC,KAAK;yBAA5BjB,mBAAA,CAAqG;MAAxDkB,GAAG,EAAED,KAAK;MAAGlB,KAAK,EAAEiB,KAAK,CAACG;wBAAOH,KAAK,CAACA,KAAK,wBAAAI,UAAA;2FAF1EjB,KAAA,CAAAC,eAAe,E,GAIhCiB,UAAI,C,GAENxB,mBAAA,CAIM,cAHJyB,UAAsB,E,gBACtBzB,mBAAA,CAAkD;IAA3C0B,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,SAAS;+DAAUhB,KAAA,CAAAqB,OAAO,GAAAnB,MAAA;iDAAPF,KAAA,CAAAqB,OAAO,E,GAChD3B,mBAAA,CAAuC;IAA9B4B,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAiB,QAAA,IAAAjB,QAAA,CAAAiB,QAAA,IAAAlB,IAAA,CAAQ;KAAE,MAAI,E,GAEhCX,mBAAA,CAGK,c,kBAFHG,mBAAA,CACKY,SAAA,QAAAC,WAAA,CADcC,IAAA,CAAAa,WAAW,EAAnBC,IAAI;yBAAf5B,mBAAA,CACK;MAD4BkB,GAAG,EAAEU,IAAI,CAACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}